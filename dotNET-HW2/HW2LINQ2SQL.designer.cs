#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dotNET_HW2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HW2")]
	public partial class HW2LINQ2SQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblCourseLecturer(TblCourseLecturer instance);
    partial void UpdateTblCourseLecturer(TblCourseLecturer instance);
    partial void DeleteTblCourseLecturer(TblCourseLecturer instance);
    partial void InsertTblStudentCourse(TblStudentCourse instance);
    partial void UpdateTblStudentCourse(TblStudentCourse instance);
    partial void DeleteTblStudentCourse(TblStudentCourse instance);
    partial void InsertTblCourse(TblCourse instance);
    partial void UpdateTblCourse(TblCourse instance);
    partial void DeleteTblCourse(TblCourse instance);
    partial void InsertTblLecturer(TblLecturer instance);
    partial void UpdateTblLecturer(TblLecturer instance);
    partial void DeleteTblLecturer(TblLecturer instance);
    partial void InsertTblStudent(TblStudent instance);
    partial void UpdateTblStudent(TblStudent instance);
    partial void DeleteTblStudent(TblStudent instance);
    #endregion
		
		public HW2LINQ2SQLDataContext() : 
				base(global::dotNET_HW2.Properties.Settings.Default.HW2_DataBase, mappingSource)
		{
			OnCreated();
		}
		
		public HW2LINQ2SQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HW2LINQ2SQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HW2LINQ2SQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HW2LINQ2SQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblCourseLecturer> TblCourseLecturers
		{
			get
			{
				return this.GetTable<TblCourseLecturer>();
			}
		}
		
		public System.Data.Linq.Table<TblStudentCourse> TblStudentCourses
		{
			get
			{
				return this.GetTable<TblStudentCourse>();
			}
		}
		
		public System.Data.Linq.Table<TblCourse> TblCourses
		{
			get
			{
				return this.GetTable<TblCourse>();
			}
		}
		
		public System.Data.Linq.Table<TblLecturer> TblLecturers
		{
			get
			{
				return this.GetTable<TblLecturer>();
			}
		}
		
		public System.Data.Linq.Table<TblStudent> TblStudents
		{
			get
			{
				return this.GetTable<TblStudent>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCourseLecturer")]
	public partial class TblCourseLecturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idLecturer;
		
		private int _idCourse;
		
		private EntityRef<TblCourse> _TblCourse;
		
		private EntityRef<TblLecturer> _TblLecturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidLecturerChanging(int value);
    partial void OnidLecturerChanged();
    partial void OnidCourseChanging(int value);
    partial void OnidCourseChanged();
    #endregion
		
		public TblCourseLecturer()
		{
			this._TblCourse = default(EntityRef<TblCourse>);
			this._TblLecturer = default(EntityRef<TblLecturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLecturer", DbType="Int NOT NULL")]
		public int idLecturer
		{
			get
			{
				return this._idLecturer;
			}
			set
			{
				if ((this._idLecturer != value))
				{
					if (this._TblLecturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLecturerChanging(value);
					this.SendPropertyChanging();
					this._idLecturer = value;
					this.SendPropertyChanged("idLecturer");
					this.OnidLecturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCourse", DbType="Int NOT NULL")]
		public int idCourse
		{
			get
			{
				return this._idCourse;
			}
			set
			{
				if ((this._idCourse != value))
				{
					if (this._TblCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCourseChanging(value);
					this.SendPropertyChanging();
					this._idCourse = value;
					this.SendPropertyChanged("idCourse");
					this.OnidCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCourse_TblCourseLecturer", Storage="_TblCourse", ThisKey="idCourse", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TblCourse TblCourse
		{
			get
			{
				return this._TblCourse.Entity;
			}
			set
			{
				TblCourse previousValue = this._TblCourse.Entity;
				if (((previousValue != value) 
							|| (this._TblCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCourse.Entity = null;
						previousValue.TblCourseLecturers.Remove(this);
					}
					this._TblCourse.Entity = value;
					if ((value != null))
					{
						value.TblCourseLecturers.Add(this);
						this._idCourse = value.Id;
					}
					else
					{
						this._idCourse = default(int);
					}
					this.SendPropertyChanged("TblCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblLecturer_TblCourseLecturer", Storage="_TblLecturer", ThisKey="idLecturer", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TblLecturer TblLecturer
		{
			get
			{
				return this._TblLecturer.Entity;
			}
			set
			{
				TblLecturer previousValue = this._TblLecturer.Entity;
				if (((previousValue != value) 
							|| (this._TblLecturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblLecturer.Entity = null;
						previousValue.TblCourseLecturers.Remove(this);
					}
					this._TblLecturer.Entity = value;
					if ((value != null))
					{
						value.TblCourseLecturers.Add(this);
						this._idLecturer = value.Id;
					}
					else
					{
						this._idLecturer = default(int);
					}
					this.SendPropertyChanged("TblLecturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblStudentCourse")]
	public partial class TblStudentCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idStudent;
		
		private int _idCourse;
		
		private EntityRef<TblCourse> _TblCourse;
		
		private EntityRef<TblStudent> _TblStudent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OnidCourseChanging(int value);
    partial void OnidCourseChanged();
    #endregion
		
		public TblStudentCourse()
		{
			this._TblCourse = default(EntityRef<TblCourse>);
			this._TblStudent = default(EntityRef<TblStudent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", DbType="Int NOT NULL")]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					if (this._TblStudent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCourse", DbType="Int NOT NULL")]
		public int idCourse
		{
			get
			{
				return this._idCourse;
			}
			set
			{
				if ((this._idCourse != value))
				{
					if (this._TblCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCourseChanging(value);
					this.SendPropertyChanging();
					this._idCourse = value;
					this.SendPropertyChanged("idCourse");
					this.OnidCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCourse_TblStudentCourse", Storage="_TblCourse", ThisKey="idCourse", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TblCourse TblCourse
		{
			get
			{
				return this._TblCourse.Entity;
			}
			set
			{
				TblCourse previousValue = this._TblCourse.Entity;
				if (((previousValue != value) 
							|| (this._TblCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCourse.Entity = null;
						previousValue.TblStudentCourses.Remove(this);
					}
					this._TblCourse.Entity = value;
					if ((value != null))
					{
						value.TblStudentCourses.Add(this);
						this._idCourse = value.Id;
					}
					else
					{
						this._idCourse = default(int);
					}
					this.SendPropertyChanged("TblCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblStudent_TblStudentCourse", Storage="_TblStudent", ThisKey="idStudent", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TblStudent TblStudent
		{
			get
			{
				return this._TblStudent.Entity;
			}
			set
			{
				TblStudent previousValue = this._TblStudent.Entity;
				if (((previousValue != value) 
							|| (this._TblStudent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblStudent.Entity = null;
						previousValue.TblStudentCourses.Remove(this);
					}
					this._TblStudent.Entity = value;
					if ((value != null))
					{
						value.TblStudentCourses.Add(this);
						this._idStudent = value.Id;
					}
					else
					{
						this._idStudent = default(int);
					}
					this.SendPropertyChanged("TblStudent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCourses")]
	public partial class TblCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CourseName;
		
		private int _Credits;
		
		private EntitySet<TblCourseLecturer> _TblCourseLecturers;
		
		private EntitySet<TblStudentCourse> _TblStudentCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCreditsChanging(int value);
    partial void OnCreditsChanged();
    #endregion
		
		public TblCourse()
		{
			this._TblCourseLecturers = new EntitySet<TblCourseLecturer>(new Action<TblCourseLecturer>(this.attach_TblCourseLecturers), new Action<TblCourseLecturer>(this.detach_TblCourseLecturers));
			this._TblStudentCourses = new EntitySet<TblStudentCourse>(new Action<TblStudentCourse>(this.attach_TblStudentCourses), new Action<TblStudentCourse>(this.detach_TblStudentCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credits", DbType="Int NOT NULL")]
		public int Credits
		{
			get
			{
				return this._Credits;
			}
			set
			{
				if ((this._Credits != value))
				{
					this.OnCreditsChanging(value);
					this.SendPropertyChanging();
					this._Credits = value;
					this.SendPropertyChanged("Credits");
					this.OnCreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCourse_TblCourseLecturer", Storage="_TblCourseLecturers", ThisKey="Id", OtherKey="idCourse")]
		public EntitySet<TblCourseLecturer> TblCourseLecturers
		{
			get
			{
				return this._TblCourseLecturers;
			}
			set
			{
				this._TblCourseLecturers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCourse_TblStudentCourse", Storage="_TblStudentCourses", ThisKey="Id", OtherKey="idCourse")]
		public EntitySet<TblStudentCourse> TblStudentCourses
		{
			get
			{
				return this._TblStudentCourses;
			}
			set
			{
				this._TblStudentCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblCourseLecturers(TblCourseLecturer entity)
		{
			this.SendPropertyChanging();
			entity.TblCourse = this;
		}
		
		private void detach_TblCourseLecturers(TblCourseLecturer entity)
		{
			this.SendPropertyChanging();
			entity.TblCourse = null;
		}
		
		private void attach_TblStudentCourses(TblStudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.TblCourse = this;
		}
		
		private void detach_TblStudentCourses(TblStudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.TblCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblLecturers")]
	public partial class TblLecturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<TblCourseLecturer> _TblCourseLecturers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TblLecturer()
		{
			this._TblCourseLecturers = new EntitySet<TblCourseLecturer>(new Action<TblCourseLecturer>(this.attach_TblCourseLecturers), new Action<TblCourseLecturer>(this.detach_TblCourseLecturers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblLecturer_TblCourseLecturer", Storage="_TblCourseLecturers", ThisKey="Id", OtherKey="idLecturer")]
		public EntitySet<TblCourseLecturer> TblCourseLecturers
		{
			get
			{
				return this._TblCourseLecturers;
			}
			set
			{
				this._TblCourseLecturers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblCourseLecturers(TblCourseLecturer entity)
		{
			this.SendPropertyChanging();
			entity.TblLecturer = this;
		}
		
		private void detach_TblCourseLecturers(TblCourseLecturer entity)
		{
			this.SendPropertyChanging();
			entity.TblLecturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblStudents")]
	public partial class TblStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _City;
		
		private System.DateTime _Birthday;
		
		private EntitySet<TblStudentCourse> _TblStudentCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    #endregion
		
		public TblStudent()
		{
			this._TblStudentCourses = new EntitySet<TblStudentCourse>(new Action<TblStudentCourse>(this.attach_TblStudentCourses), new Action<TblStudentCourse>(this.detach_TblStudentCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date NOT NULL")]
		public System.DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblStudent_TblStudentCourse", Storage="_TblStudentCourses", ThisKey="Id", OtherKey="idStudent")]
		public EntitySet<TblStudentCourse> TblStudentCourses
		{
			get
			{
				return this._TblStudentCourses;
			}
			set
			{
				this._TblStudentCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblStudentCourses(TblStudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.TblStudent = this;
		}
		
		private void detach_TblStudentCourses(TblStudentCourse entity)
		{
			this.SendPropertyChanging();
			entity.TblStudent = null;
		}
	}
}
#pragma warning restore 1591
